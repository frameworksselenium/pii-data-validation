on:
  workflow_dispatch:
    inputs:
      name:
        type: choice
        description: Who to greet
        options:
        - monalisa
        - cschleiden
      message:
        required: true
      use-emoji:
        type: boolean
        description: Include ðŸŽ‰ðŸ¤£ emojis
      environment:
        type: environment
name: Build and Push to ECR
env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRETE_ID }}
  CONTAINER_IMAGE: fastapi-example
  SHA: ${{ github.sha }}

jobs:
  build-and-push:
    name: Build and deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app
    steps:

    - name: Checkout
      uses: actions/checkout@master
    
    - name: Setup ECR
      id: login_ecr
      run: |
        # Login to AWS ECR
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/fastapi-example

    - name: Build and tag the image
      run: |
        # Build and tag the image
        docker build -t $CONTAINER_IMAGE:$SHA -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE:latest .
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE:latest

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRETE_ID }}
        aws-region: us-east-1

    - name: Deploy CloudFormation stack
      run: |
        echo ls
        aws cloudformation deploy \
          --stack-name pii-stack \
          --template-file cloudformation/ecs.yml \
          --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM